buildscript {
    repositories {
        google()
        jcenter()
    }

    ext {
        androidBuildConfig = [
                'compileSdk': 28,
                'minSdk'    : 21,
                'targetSdk' : 28,
        ]

        versions = [
                'android_gradle'  : '3.2.0-rc02',
                'kotlin'          : '1.2.61',
                'ktlint'          : '0.19.0',
                'androidx'        : [
                        'appcompat'        : '1.0.0-rc02',
                        'constraint_layout': '1.1.3',
                        'design'           : '1.0.0-rc01',
                        'core_ktx'         : '1.0.0-rc02',
                        'lifecycle'        : '2.0.0-rc01',
                        'room'             : '2.0.0-rc01',
                        'test_runner'      : '1.1.0-alpha4',
                        'test_rules'       : '1.1.0-alpha4'
                ],
                'rxkotlin'        : '2.3.0',
                'dagger'          : '2.16',
                'threetenabp'     : '1.1.0',
                'okhttp'          : '3.8.1',
                'jsoup'           : '1.11.3',
                'exoplayer'       : '2.8.4',
                'javax_annotation': '1.0',
                'javax_inject'    : '1',
                'espresso'        : '3.1.0-alpha4',
                'junit'           : '4.12',
                'assertj'         : '3.8.0',
                'mockito'         : '1.6.0'
        ]

        domainDependencies = [
                javaxAnnotation: "javax.annotation:jsr250-api:${versions.javax_annotation}",
                javaxInject    : "javax.inject:javax.inject:${versions.javax_inject}",
                rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}",
                kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}"
        ]

        domainTestDependencies = [
                junit  : "junit:junit:${versions.junit}",
                mockito: "com.nhaarman:mockito-kotlin:${versions.mockito}",
                assertj: "org.assertj:assertj-core:${versions.assertj}"
        ]

        dataDependencies = [
                daggerCompiler : "com.google.dagger:dagger-compiler:${versions.dagger}",
                dagger         : "com.google.dagger:dagger:${versions.dagger}",
                rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}",
                kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}",
                javaxAnnotation: "javax.annotation:jsr250-api:${versions.javax_annotation}",
                javaxInject    : "javax.inject:javax.inject:${versions.javax_inject}",
        ]

        dataTestDependencies = [
                junit      : "junit:junit:${versions.junit}",
                kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                assertj    : "org.assertj:assertj-core:${versions.assertj}",
                mockito    : "com.nhaarman:mockito-kotlin:${versions.mockito}",
        ]

        remoteDependencies = [
                daggerCompiler : "com.google.dagger:dagger-compiler:${versions.dagger}",
                dagger         : "com.google.dagger:dagger:${versions.dagger}",
                rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin}",
                kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}",
                okHttp         : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
                okHttpLogger   : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
                javaxAnnotation: "javax.annotation:jsr250-api:${versions.javax_annotation}",
                javaxInject    : "javax.inject:javax.inject:${versions.javax_inject}",
                jsoup          : "org.jsoup:jsoup:${versions.jsoup}"
        ]

        remoteTestDependencies = [
                junit      : "junit:junit:${versions.junit}",
                kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                assertj    : "org.assertj:assertj-core:${versions.assertj}",
                mockito    : "com.nhaarman:mockito-kotlin:${versions.mockito}",
        ]
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.android_gradle}"

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${versions.kotlin}"

        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.3'

        classpath 'io.github.rockerhieu:versionberg:1.0.2'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version "0.20.0"
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

String propOrDef(String propertyName, String defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}